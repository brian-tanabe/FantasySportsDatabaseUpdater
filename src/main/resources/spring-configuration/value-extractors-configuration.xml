<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="value-transformer-configuration.xml"/>

    <!-- ************ ESPN PLAYER PROJECTIONS PAGE VALUE EXTRACTORS: ************ -->
    <bean id="espnProjectionsPagePlayerValueExtractor" class="com.btanabe.fsdu.parsers.PaginatedValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="&lt;tr id=&quot;.+?&quot; class=&quot;pncPlayerRow.+?&quot;&gt;(.|\n|\s)+?&lt;\/tr&gt;"/>
    </bean>

    <bean id="espnProjectionsNextPageValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;a href=&quot;)https?://[a-zA-Z0-9./?&amp;amp;=]+(?=&quot;>NEXT)"/>
        <constructor-arg name="outputValueTransformer" ref="unescapeAmpersandsValueTransformer"/>
    </bean>

    <!-- ************ ESPN PLAYER PROJECTION VALUE EXTRACTORS: ************ -->
    <bean id="espnProjectionsPlayerIdValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=playerid=&quot;)\d+(?=&quot;)"/>
    </bean>

    <bean id="espnProjectionsRankValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableData&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsNameValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertablePlayerName&quot; id=&quot;playername_\d{1,10}&quot; style=&quot;.{0,128}?&quot;&gt;&lt;a href=&quot;&quot; class=&quot;.{0,128}?&quot; content=&quot;.{0,128}?&quot; instance=&quot;.{0,128}?&quot; fpopheight=&quot;.{0,128}?&quot; fpopwidth=&quot;.{0,128}?&quot; tab=&quot;.{0,128}?&quot; leagueid=&quot;.{0,128}?&quot; playerid=&quot;.{0,128}?&quot; teamid=&quot;.{0,128}?&quot; seasonid=&quot;.{0,128}?&quot; cache=&quot;.{0,128}?&quot;&gt;).+?(?=&lt;/a&gt;)"/>
    </bean>

    <bean id="espnProjectionsTeamValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertablePlayerName&quot; id=&quot;playername_\d{1,10}&quot; style=&quot;.{0,128}?&quot;&gt;&lt;a href=&quot;&quot; class=&quot;.{0,128}?&quot; content=&quot;.{0,128}?&quot; instance=&quot;.{0,128}?&quot; fpopheight=&quot;.{0,128}?&quot; fpopwidth=&quot;.{0,128}?&quot; tab=&quot;.{0,128}?&quot; leagueid=&quot;.{0,128}?&quot; playerid=&quot;.{0,128}?&quot; teamid=&quot;.{0,128}?&quot; seasonid=&quot;.{0,128}?&quot; cache=&quot;.{0,128}?&quot;&gt;.{1,128}&lt;/a&gt;.?, ).{2,3}(?= .+&lt;/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsPositionValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertablePlayerName&quot; id=&quot;playername_\d{1,10}&quot; style=&quot;.{0,128}?&quot;&gt;&lt;a href=&quot;&quot; class=&quot;.{0,128}?&quot; content=&quot;.{0,128}?&quot; instance=&quot;.{0,128}?&quot; fpopheight=&quot;.{0,128}?&quot; fpopwidth=&quot;.{0,128}?&quot; tab=&quot;.{0,128}?&quot; leagueid=&quot;.{0,128}?&quot; playerid=&quot;.{0,128}?&quot; teamid=&quot;.{0,128}?&quot; seasonid=&quot;.{0,128}?&quot; cache=&quot;.{0,128}?&quot;&gt;.{1,128}&lt;/a&gt;.?, .{2,3} )(QB|RB|WR|TE|K|D\\ST|PG|SG|SF|PF|C|, ){1,5}(?=\s?)"/>
    </bean>

    <bean id="espnProjectionsPassingCompletionsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=/\d{1,5}&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsPassingAttemptsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}/)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsPassingYardsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsPassingTouchdownsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsInterceptionsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsRushingAttemptsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsRushingYardsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)-?\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsRushingTouchdownsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;-?\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsReceptionsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;-?\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsReceivingYardsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;-?\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)-?\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsReceivingTouchdownsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;-?\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;-?\d{1,5}&lt;\/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)\d+(?=&lt;\/td&gt;)"/>
    </bean>

    <bean id="espnProjectionsFantasyPointsValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat appliedPoints&quot;&gt;)\d{1,4}(\.\d{1,2})?(?=&lt;/td&gt;)"/>
    </bean>

    <bean id="espnPlayerPageFieldGoalPercentageValueExtractor"
          class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageFreeThrowPercentageValueExtractor"
          class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageThreePointersPerGameValueExtractor"
          class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageReboundsPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageAssistsPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageStealsPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageBlocksPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPageTurnoversPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>

    <bean id="espnPlayerPagePointsPerGameValueExtractor" class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Double"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;.\d{1,4}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;\d{0,2}.\d{0,2}&lt;/td&gt;\n&lt;td class=&quot;playertableStat&quot;&gt;)(.+?)(?=&lt;/td&gt;)"/>
        <constructor-arg name="outputValueTransformer" ref="nullToZeroAsDoubleValueTransformer"/>
    </bean>
    <!-- ************ ESPN PLAYER PROJECTION VALUE EXTRACTORS: ************ -->

    <!-- *************** ESPN PLAYER PAGE VALUE EXTRACTORS: *************** -->
    <!--
     College
     Draft pick taken
     -->

    <bean id="espnPlayerPagePlayerIdValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex" value="(?&lt;=var playerId = )\d{4,10}(?=;)"/>
    </bean>

    <bean id="espnPlayerPageHeightValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;li&gt;)\d' \d{1,2}&quot;(?=, \d{3} lbs&lt;/li&gt;)"/>
    </bean>

    <bean id="espnPlayerPageWeightValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;li&gt;\d' \d{1,2}&quot;, )\d{3}(?= lbs&lt;/li&gt;)"/>
    </bean>

    <bean id="espnPlayerPageBirthdayValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;span&gt;Born&lt;/span&gt;)[a-zA-Z]{3} \d{1,2}, \d{4}(?= in )"/>
    </bean>

    <bean id="espnPlayerPageExperienceValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;span&gt;Experience&lt;/span&gt;)\d{1,2}(?=[a-z]{2} season)"/>
    </bean>

    <bean id="espnPlayerPageCollegeValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;span&gt;College&lt;/span&gt;)[a-zA-Z]{1,128}(?=&lt;/li&gt;)"/>
    </bean>

    <bean id="espnPlayerPageDraftPickValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;span&gt;Drafted&lt;/span&gt; {0,5}\d{4}: \d[a-z]{2} Rnd, ).+?(?=[a-z]{2} by )"/>
    </bean>

    <bean id="espnPlayerPageDraftPickTransformingValueExtractor"
          class="com.btanabe.fsdu.parsers.TransformingValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.Integer"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;span&gt;Drafted&lt;/span&gt; {0,5}\d{4}: \d[a-z]{2} Rnd, ).+?(?=[a-z]{2} by )"/>
        <constructor-arg name="outputValueTransformer" ref="nullToNegativeOneAsIntegerValueTransformer"/>
    </bean>
    <!-- *************** ESPN PLAYER PAGE VALUE EXTRACTORS: *************** -->

    <!-- ************** NFL POSITION PAGE VALUE EXTRACTORS: *************** -->

    <bean id="nflPositionPageRunningbacksValueExtractor" class="com.btanabe.fsdu.parsers.PaginatedValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="&lt;tr class=&quot;(odd|even)&quot;&gt;(.|\n|\s)+?&lt;\/tr&gt;"/>
    </bean>

    <bean id="nflPositionPagePositionValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;td class=&quot;tbdy&quot;&gt;)(QB|RB|WR|TE|K)(?=&lt;/td&gt;)"/>
    </bean>

    <bean id="nflPositionPageFirstNameValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;a href=&quot;/player/[a-z]{0,128}/\d{1,10}/profile&quot;&gt;[a-zA-Z]{0,128}, ).+(?=&lt;/a&gt;)"/>
    </bean>

    <bean id="nflPositionPageLastNameValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;a href=&quot;/player/[a-z]{0,128}/\d{1,10}/profile&quot;&gt;).+(?=, [a-zA-Z]{0,128}&lt;/a&gt;)"/>
    </bean>

    <bean id="nflPositionPageCompleteNameValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;a href=&quot;/player/[a-z]{0,128}/\d{1,10}/profile&quot;&gt;).+(?=&lt;/a&gt;)"/>
    </bean>

    <bean id="nflPositionPageNflTeamValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="(?&lt;=&lt;a href=&quot;/teams/[a-z]{0,128}/profile\?team=[A-Z]{2,3}&quot;&gt;).+(?=&lt;/a&gt;)"/>
    </bean>

    <bean id="nflPositionPagePlayerProfilePageLinkValueExtractor" class="com.btanabe.fsdu.parsers.ValueExtractor">
        <constructor-arg name="outputClasspath" value="java.lang.String"/>
        <constructor-arg name="outputMatchingRegex"
                         value="/player/[a-z]{0,128}/\d{1,10}/profile"/>
    </bean>
    <!-- ************** NFL POSITION PAGE VALUE EXTRACTORS: *************** -->
</beans>